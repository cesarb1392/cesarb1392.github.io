{"version":3,"sources":["assets/logo.png","assets/files/CesarRB-CV.pdf","components/generic/Link.tsx","components/body/Profile.tsx","components/body/Logo.tsx","assets/tools/docker.svg","assets/tools/aws.svg","assets/tools/nodejs.svg","assets/tools/mongodb.svg","assets/tools/sql.svg","assets/tools/typescript.svg","assets/tools/php.svg","assets/tools/java.svg","assets/tools/js.svg","assets/tools/linux.svg","assets/tools/git.svg","assets/tools/electron.svg","assets/tools/react.svg","assets/tools/nginx.svg","assets/tools/apache.svg","assets/tools/cicd.svg","components/body/Tools.tsx","assets/tools/k8s.svg","assets/tools/serverless.svg","assets/files/Reference-letter.pdf","components/body/Content.tsx","components/PageBody.tsx","components/header/ColorModeSwitcher.tsx","components/header/SocialIcon.tsx","components/HeaderBar.tsx","components/Page.tsx","styles/CustomTheme.ts","App.tsx","utils/reportWebVitals.ts","utils/serviceWorker.ts","index.tsx"],"names":["BaseLink","href","label","bold","color","target","rel","as","Profile","useMediaQuery","isDesktopView","imageRef","React","loaded","setLoaded","current","complete","direction","alignItems","justify","pb","boxSize","borderRadius","src","profileImage","alt","display","ref","onLoad","CV","spin","keyframes","Logo","forwardRef","props","animation","usePrefersReducedMotion","undefined","img","fileSrc","h","w","TOOLS","docker","nodejs","react","php","sql","typescript","java","apache","js","linux","electron","git","aws","cicd","nginx","mongodb","Tools","half","Math","ceil","length","firstHalf","slice","secondHalf","splitRows","align","pt","map","tool","i","pl","pr","WORK_EXP","plek","job","description","span","ilumy","sugerendo","referenceLetter","STUDIES","education","location","year","ContentJob","key","ContentDescription","Content","justifyContent","variant","study","index","PageBody","ColorModeSwitcher","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","onClick","icon","aria-label","SocialIcon","FiGithub","rendericon","FiLinkedin","FiGitlab","event","preventDefault","window","open","redirect","HeaderBar","flashingCounter","Page","setColorMode","colorMode","firstUpdate","useEffect","setTimeout","width","thickness","speed","emptyColor","extendedTheme","extendTheme","theme","initialColorMode","useSystemColorMode","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","config","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.51928783.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b222698a.png\";","export default __webpack_public_path__ + \"static/media/CesarRB-CV.9c95d297.pdf\";","import { Link, Text } from '@chakra-ui/react';\nimport * as React from 'react';\n\nexport const BaseLink = ({ href, label, bold }: { href: string; label: string; bold?: boolean }): JSX.Element => {\n\treturn (\n\t\t<Link color=\"teal.500\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t<Text as={'i'}>{bold ? <b>{label}</b> : label}</Text>\n\t\t</Link>\n\t);\n};\n","import * as React from 'react';\nimport { Flex, Image, Box, Heading, useMediaQuery } from '@chakra-ui/react';\nimport profileImage from 'src/assets/logo.png';\nimport CV from 'src/assets/files/CesarRB-CV.pdf';\nimport { BaseLink } from 'src/components/generic/Link';\n\nexport const Profile = (): JSX.Element => {\n\tconst [isDesktopView] = useMediaQuery('(min-width: 832px)');\n\tconst imageRef = React.useRef<HTMLImageElement>(null);\n\tconst [loaded, setLoaded] = React.useState(false);\n\tReact.useEffect(() => {\n\t\tif (!loaded && imageRef.current?.complete) {\n\t\t\tsetLoaded(true);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{!isDesktopView && (\n\t\t\t\t<Flex direction={'row'} alignItems=\"center\" justify=\"space-around\" pb={5}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tboxSize=\"200px\"\n\t\t\t\t\t\tborderRadius=\"full\"\n\t\t\t\t\t\tsrc={profileImage}\n\t\t\t\t\t\talt={'Profile Image'}\n\t\t\t\t\t\tdisplay={!loaded ? 'none' : 'block'}\n\t\t\t\t\t\tref={imageRef}\n\t\t\t\t\t\tonLoad={() => {\n\t\t\t\t\t\t\tsetLoaded(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t\t<Flex direction={'row'} alignItems=\"center\" justify=\"space-around\">\n\t\t\t\t{isDesktopView && (\n\t\t\t\t\t<Image\n\t\t\t\t\t\tboxSize=\"200px\"\n\t\t\t\t\t\tborderRadius=\"full\"\n\t\t\t\t\t\tsrc={profileImage}\n\t\t\t\t\t\talt={'Profile Image'}\n\t\t\t\t\t\tdisplay={!loaded ? 'none' : 'block'}\n\t\t\t\t\t\tref={imageRef}\n\t\t\t\t\t\tonLoad={() => {\n\t\t\t\t\t\t\tsetLoaded(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t<Flex direction={'column'}>\n\t\t\t\t\t<Box pb={3}>\n\t\t\t\t\t\t<Heading>\n\t\t\t\t\t\t\t<b>César Represa Bautista </b>\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Heading>\n\t\t\t\t\t\t\t<b>Software Developer</b>\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t</Box>\n\t\t\t\t</Flex>\n\t\t\t\t<Flex direction={'column'}>\n\t\t\t\t\t<Box pb={3}>\n\t\t\t\t\t\t<BaseLink href={'mailto:contact@cesarb.dev'} label={'contact@cesarb.dev'} bold={true} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box pb={3}>\n\t\t\t\t\t\t<BaseLink href={'tel:+31684983437'} label={'+31684983437'} bold={true} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<BaseLink href={CV} label={'Curriculum Vitae'} bold={true} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n\t\t</>\n\t);\n};\n","import * as React from 'react';\nimport { chakra, keyframes, ImageProps, forwardRef, usePrefersReducedMotion } from '@chakra-ui/react';\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LogoImg = forwardRef<ImageProps & { fileSrc: string }, 'img'>((props, ref) => {\n\tconst prefersReducedMotion = usePrefersReducedMotion();\n\tconst animation = prefersReducedMotion ? undefined : `${spin} infinite 20s linear`;\n\treturn <chakra.img animation={animation} src={props.fileSrc} ref={ref} {...props} />;\n});\n\nexport const Logo = ({\n\tfileSrc,\n\talt,\n\tisDesktopView,\n}: {\n\tfileSrc: string;\n\talt: string;\n\tisDesktopView?: boolean;\n}): JSX.Element => {\n\tconst h = isDesktopView ? '6vmax' : '3vmax';\n\tconst w = isDesktopView ? '8vmax' : '4vmax';\n\treturn <chakra.img h={h} w={w} src={fileSrc} alt={alt} />;\n};\n\nexport const AnimatedLogo = ({ fileSrc }: { fileSrc: string }): JSX.Element => {\n\treturn <LogoImg h=\"10vmin\" fileSrc={fileSrc} pointerEvents=\"none\" />;\n};\n","export default __webpack_public_path__ + \"static/media/docker.4b337013.svg\";","export default __webpack_public_path__ + \"static/media/aws.667be7ef.svg\";","export default __webpack_public_path__ + \"static/media/nodejs.a8636941.svg\";","export default __webpack_public_path__ + \"static/media/mongodb.b508609b.svg\";","export default __webpack_public_path__ + \"static/media/sql.b57bbf2f.svg\";","export default __webpack_public_path__ + \"static/media/typescript.f2a7250a.svg\";","export default __webpack_public_path__ + \"static/media/php.a2131666.svg\";","export default __webpack_public_path__ + \"static/media/java.8cb1fd4a.svg\";","export default __webpack_public_path__ + \"static/media/js.43e744a2.svg\";","export default __webpack_public_path__ + \"static/media/linux.57ba9406.svg\";","export default __webpack_public_path__ + \"static/media/git.c0ad6253.svg\";","export default __webpack_public_path__ + \"static/media/electron.91be96c4.svg\";","export default __webpack_public_path__ + \"static/media/react.9df6d040.svg\";","export default __webpack_public_path__ + \"static/media/nginx.78ca3e0b.svg\";","export default __webpack_public_path__ + \"static/media/apache.17578198.svg\";","export default __webpack_public_path__ + \"static/media/cicd.b181fb60.svg\";","import * as React from 'react';\nimport { Flex, Box, useMediaQuery } from '@chakra-ui/react';\nimport { Logo } from './Logo';\nimport docker from 'src/assets/tools/docker.svg';\nimport aws from 'src/assets/tools/aws.svg';\nimport nodejs from 'src/assets/tools/nodejs.svg';\nimport mongodb from 'src/assets/tools/mongodb.svg';\nimport sql from 'src/assets/tools/sql.svg';\nimport typescript from 'src/assets/tools/typescript.svg';\nimport php from 'src/assets/tools/php.svg';\nimport java from 'src/assets/tools/java.svg';\nimport js from 'src/assets/tools/js.svg';\nimport linux from 'src/assets/tools/linux.svg';\nimport git from 'src/assets/tools/git.svg';\nimport electron from 'src/assets/tools/electron.svg';\nimport react from 'src/assets/tools/react.svg';\nimport nginx from 'src/assets/tools/nginx.svg';\nimport apache from 'src/assets/tools/apache.svg';\nimport cicd from 'src/assets/tools/cicd.svg';\nimport k8s from 'src/assets/tools/k8s.svg';\nimport serverless from 'src/assets/tools/serverless.svg';\n\nconst TOOLS = [\n\t{\n\t\talt: 'docker',\n\t\tfileSrc: docker,\n\t},\n\t{\n\t\talt: 'k8s',\n\t\tfileSrc: k8s,\n\t},\n\t{\n\t\talt: 'nodejs',\n\t\tfileSrc: nodejs,\n\t},\n\t{\n\t\talt: 'react',\n\t\tfileSrc: react,\n\t},\n\t{\n\t\talt: 'php',\n\t\tfileSrc: php,\n\t},\n\t{\n\t\talt: 'sql',\n\t\tfileSrc: sql,\n\t},\n\t{\n\t\talt: 'typescript',\n\t\tfileSrc: typescript,\n\t},\n\t{\n\t\talt: 'java',\n\t\tfileSrc: java,\n\t},\n\t{\n\t\talt: 'apache',\n\t\tfileSrc: apache,\n\t},\n\t{\n\t\talt: 'js',\n\t\tfileSrc: js,\n\t},\n\t{\n\t\talt: 'linux',\n\t\tfileSrc: linux,\n\t},\n\t{\n\t\talt: 'electron',\n\t\tfileSrc: electron,\n\t},\n\t{\n\t\talt: 'git',\n\t\tfileSrc: git,\n\t},\n\t{\n\t\talt: 'aws',\n\t\tfileSrc: aws,\n\t},\n\t{\n\t\talt: 'cicd',\n\t\tfileSrc: cicd,\n\t},\n\t{\n\t\talt: 'nginx',\n\t\tfileSrc: nginx,\n\t},\n\n\t{\n\t\talt: 'mongodb',\n\t\tfileSrc: mongodb,\n\t},\n\t{\n\t\talt: 'serverless',\n\t\tfileSrc: serverless,\n\t},\n];\n\nfunction splitRows() {\n\tconst half = Math.ceil(TOOLS.length / 2);\n\treturn {\n\t\tfirstHalf: TOOLS.slice(0, half),\n\t\tsecondHalf: TOOLS.slice(-half),\n\t};\n}\n\nexport const Tools = (): JSX.Element => {\n\tconst [isDesktopView] = useMediaQuery('(min-width: 832px)');\n\tconst { firstHalf, secondHalf } = splitRows();\n\treturn (\n\t\t<Flex direction={'column'} align=\"center\" justify=\"center\" pt={10} pb={isDesktopView ? 6 : 5}>\n\t\t\t<Flex direction={'row'} pb={isDesktopView ? 5 : 3}>\n\t\t\t\t{firstHalf.map((tool: { alt: string; fileSrc: string }, i: number) => (\n\t\t\t\t\t<Box pl={2} pr={2} key={i}>\n\t\t\t\t\t\t<Logo isDesktopView={isDesktopView} key={tool.alt} alt={tool.alt} fileSrc={tool.fileSrc} />\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t\t<Flex direction={'row'}>\n\t\t\t\t{secondHalf.map((tool: { alt: string; fileSrc: string }, i: number) => (\n\t\t\t\t\t<Box pl={2} pr={2} key={i}>\n\t\t\t\t\t\t<Logo isDesktopView={isDesktopView} key={tool.alt} alt={tool.alt} fileSrc={tool.fileSrc} />\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t</Flex>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/k8s.9c2b252d.svg\";","export default __webpack_public_path__ + \"static/media/serverless.3b018794.svg\";","export default __webpack_public_path__ + \"static/media/Reference-letter.982ecc0f.pdf\";","import * as React from 'react';\nimport { Box, Flex, chakra, Spacer, Table, Thead, Tbody, Tr, Th, Td } from '@chakra-ui/react';\nimport { BaseLink } from 'src/components/generic/Link';\nimport referenceLetter from 'src/assets/files/Reference-letter.pdf';\n\nconst WORK_EXP = {\n\tplek: {\n\t\tjob: [\n\t\t\t<BaseLink key={1} href={'https://plek.co/en'} label={'Plek'} />,\n\t\t\t'Backend developer',\n\t\t\t'Jan 2017 – Jan 2020',\n\t\t\t'Amsterdam - Netherlands',\n\t\t],\n\t\tdescription: [\n\t\t\t<chakra.span key={12}>\n\t\t\t\tPlek is an intranet, communication and workplace tool for companies. I learned about the importance of\n\t\t\t\tcode optimization and refactoring to improve quality, readability or performance, to handle memory leaks\n\t\t\t\tor reduce memory use, touching all the parts of the software development circle (from the design until\n\t\t\t\tthe integration and deployment of the product), working with 3rd party services and different\n\t\t\t\ttechnologies like NodeJs, AngularJs, React, Docker, MongoDB, ElasticSearch or Redis.\n\t\t\t</chakra.span>,\n\t\t\t<div key={13}>\n\t\t\t\t<chakra.span key={13}> Plek also has a </chakra.span>\n\t\t\t\t<BaseLink href={`https://plek.co/en/app-desktop`} label={`desktop app`} />\n\t\t\t\t<chakra.span key={14}>\n\t\t\t\t\t, which is base on Electron to create native applications for Windows, Mac OSx or Linux users.I was\n\t\t\t\t\tthe maintainer and also, I developed a system to release new updates automatically when they are\n\t\t\t\t\tpublished.\n\t\t\t\t</chakra.span>\n\t\t\t</div>,\n\t\t\t<>\n\t\t\t\t<BaseLink href={'https://iwa-connect.org'} label={'IWA'} />\n\t\t\t\t<chakra.span key={15}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tis a global social platform,with subscription and membership features. On this project, I worked\n\t\t\t\t\twith external services like GlobalCollect, the payment system of the platform, and Turpin, used to\n\t\t\t\t\tsend out orders for the magazines that the users buy. The biggest challenge was to improve and\n\t\t\t\t\tsupport the payment system, managing the exchange of currencies and taxes base on each country law.\n\t\t\t\t\tNew features implemented were a discount system or the creation of new kinds of memberships.\n\t\t\t\t</chakra.span>\n\t\t\t</>,\n\t\t],\n\t},\n\tilumy: {\n\t\tjob: [\n\t\t\t<BaseLink key={2} href={'https://ilumy.com/'} label={'Ilumy'} />,\n\t\t\t'Backend developer',\n\t\t\t'Jan 2017 – Jan 2020',\n\t\t\t'Amsterdam - Netherlands',\n\t\t],\n\t\tdescription: [\n\t\t\t<chakra.span key={11}>\n\t\t\t\tMy role was the setup, configuration and maintenance (core and updates of dependencies, web analytics,\n\t\t\t\tgeneral support, backups...) of the website. Focused on drupal websites and Typescript projects.\n\t\t\t</chakra.span>,\n\t\t\t<>\n\t\t\t\t<BaseLink key={3} href={'https://30dagenopzee.nl/'} label={'The Indische Herinneringscentrum'} />\n\t\t\t\t<chakra.span>\n\t\t\t\t\t{' '}\n\t\t\t\t\twe made a backend project from scratch with NodeJs and Typescript. The challenge was to code the\n\t\t\t\t\tlogic to fetch part of the content and routes displayed on the globe from a third party. Also, a CMS\n\t\t\t\t\tsystem was developed to import the rest of the data.\n\t\t\t\t</chakra.span>\n\t\t\t</>,\n\t\t\t<>\n\t\t\t\t<BaseLink key={4} href={'http://bigmove.nu/'} label={'The BigMove app'} />\n\t\t\t\t<chakra.span>\n\t\t\t\t\t{' '}\n\t\t\t\t\trequired to develop a server to communicate the website and mobile app of the client. Implemented\n\t\t\t\t\tsome features like a real-time chat (one-to-one and multi-room, over WebSocket), a chat bot or a\n\t\t\t\t\tcronjob system to trigger actions as sending out emails, push notifications web alerts or chat\n\t\t\t\t\tmessages.\n\t\t\t\t</chakra.span>\n\t\t\t</>,\n\t\t\t<>\n\t\t\t\t<BaseLink\n\t\t\t\t\tkey={5}\n\t\t\t\t\thref={'https://mensenrechten.nl/nl'}\n\t\t\t\t\tlabel={'The College voor de Rechten van de Mens'}\n\t\t\t\t/>\n\t\t\t\t<chakra.span> project consists on a drupal website and a custom CMS to publish articles </chakra.span>\n\t\t\t\t<BaseLink key={8} href={'https://mensenrechten.nl/nl/publicaties'} label={'on the website.'} />\n\t\t\t\t<chakra.span>\n\t\t\t\t\t{' '}\n\t\t\t\t\tMy main task was the setup, configuration and maintenance (core and dependencies updates, web\n\t\t\t\t\tanalytics, general support, backups...) of the website. Developed custom drupal modules to fit\n\t\t\t\t\trequirements.\n\t\t\t\t</chakra.span>\n\t\t\t</>,\n\t\t\t<>\n\t\t\t\t<BaseLink key={6} href={'https://plek.co/'} label={'The Plek.co'} />\n\t\t\t\t<chakra.span>\n\t\t\t\t\t{' '}\n\t\t\t\t\twebsite is another drupal project. I was in charge of the maintenance of the server, deploying\n\t\t\t\t\tupdates, developing custom modules or helping to integrate the website with SharpSpring\n\t\t\t\t</chakra.span>\n\t\t\t</>,\n\t\t],\n\t},\n\tsugerendo: {\n\t\tjob: [\n\t\t\t<BaseLink key={7} href={'https://www.sugerendo.com/en/'} label={'Sugerendo Sistemas'} />,\n\t\t\t<>\n\t\t\t\tProgrammer analyst <BaseLink key={8} href={referenceLetter} label={'(Reference letter)'} />\n\t\t\t</>,\n\t\t\t'Feb 2016 – Jul 2016',\n\t\t\t'Madrid (Spain)',\n\t\t],\n\t\tdescription: [\n\t\t\t<chakra.span key={11}>\n\t\t\t\tSugerendo Sistemas is a start-up located in Madrid where between 6 and 10 people work. Sugerendo is\n\t\t\t\tengaged in consulting and implementation of e-commerce for businesses with free software platforms like\n\t\t\t\tMagento. The main function was to give support to projects with e-commerce that required a certain\n\t\t\t\ttechnical solution. Mainly my function consisted in the development of new modules and features to add\n\t\t\t\tto the online commerce of each client, in the part of frontend as well as backend.\n\t\t\t</chakra.span>,\n\t\t\t<chakra.span key={13}>\n\t\t\t\tThe development of new modules is done using the web languages PHTML, HTML, PHP and JavaScript. Another\n\t\t\t\tpart of my job was the maintenance and management of online stores, from the server configuration to the\n\t\t\t\toptimum configuration of the administrator control panel.\n\t\t\t</chakra.span>,\n\t\t],\n\t},\n};\nconst STUDIES = [\n\t{\n\t\teducation: 'Computer Engineer Degree',\n\t\tlocation: 'UPSAM - Madrid (Spain)',\n\t\tyear: 'Sep 2012 – Jun 2016',\n\t},\n\t{\n\t\teducation: 'Aeronautical and Airport Management Certification',\n\t\tlocation: 'Universidad San Pablo CEU - Madrid (Spain)',\n\t\tyear: 'Sep 2010 - Jun 2012',\n\t},\n\t{ education: 'High School', location: 'IES Astorga - Astorga (Spain)', year: 'Sep 2004 - Jul 2010' },\n];\n\nconst ContentJob = ({ job }: { job: (string | JSX.Element)[] }) => {\n\treturn (\n\t\t<>\n\t\t\t{job.map((job, key) => (\n\t\t\t\t<div key={key}>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<b>{job}</b>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Spacer />\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nconst ContentDescription = ({ description }: { description: JSX.Element[] }) => {\n\treturn (\n\t\t<Flex direction={'column'}>\n\t\t\t{description.map((description, key) => (\n\t\t\t\t<Box pb={4} key={key}>\n\t\t\t\t\t{description}\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Flex>\n\t);\n};\n\nexport const Content = (): JSX.Element => {\n\treturn (\n\t\t<Flex direction={'column'} pt={5} pl={15} pr={15} align=\"center\" justifyContent=\"center\">\n\t\t\t<Box>\n\t\t\t\t<ContentJob job={WORK_EXP.plek.job} />\n\t\t\t\t<Box>\n\t\t\t\t\t<ContentDescription description={WORK_EXP.plek.description} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t<ContentJob job={WORK_EXP.ilumy.job} />\n\t\t\t\t<Box>\n\t\t\t\t\t<ContentDescription description={WORK_EXP.ilumy.description} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t<ContentJob job={WORK_EXP.sugerendo.job} />\n\t\t\t\t<Box>\n\t\t\t\t\t<ContentDescription description={WORK_EXP.sugerendo.description} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box pt={15}>\n\t\t\t\t<Table variant=\"simple\">\n\t\t\t\t\t<Thead>\n\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t<Th>Education</Th>\n\t\t\t\t\t\t\t<Th>Location</Th>\n\t\t\t\t\t\t\t<Th>Year</Th>\n\t\t\t\t\t\t</Tr>\n\t\t\t\t\t</Thead>\n\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t{STUDIES.map((study, index) => (\n\t\t\t\t\t\t\t<Tr key={index}>\n\t\t\t\t\t\t\t\t<Td>{study.education}</Td>\n\t\t\t\t\t\t\t\t<Td>{study.location}</Td>\n\t\t\t\t\t\t\t\t<Td>{study.year}</Td>\n\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tbody>\n\t\t\t\t</Table>\n\t\t\t</Box>\n\t\t</Flex>\n\t);\n};\n","import * as React from 'react';\nimport { Profile } from './body/Profile';\nimport { Tools } from './body/Tools';\nimport { Content } from './body/Content';\nimport { Flex } from '@chakra-ui/react';\n\nexport const PageBody = (): JSX.Element => {\n\treturn (\n\t\t<Flex direction={'column'}>\n\t\t\t<Profile />\n\t\t\t<Tools />\n\t\t\t<Content />\n\t\t</Flex>\n\t);\n};\n","import * as React from 'react';\nimport { useColorMode, useColorModeValue, IconButton, IconButtonProps } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, 'aria-label'>;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n\tconst { toggleColorMode } = useColorMode();\n\tconst text = useColorModeValue('dark', 'light');\n\tconst SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n\treturn (\n\t\t<IconButton\n\t\t\tsize=\"lg\"\n\t\t\tfontSize=\"larger\"\n\t\t\tvariant=\"ghost\"\n\t\t\tcolor=\"current\"\n\t\t\tonClick={toggleColorMode}\n\t\t\ticon={<SwitchIcon />}\n\t\t\taria-label={`Switch to ${text} mode`}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n","import * as React from 'react';\nimport { useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FiGithub, FiGitlab, FiLinkedin } from 'react-icons/all';\n\nexport const SocialIcon: (props: { rendericon: string; redirect: string }) => JSX.Element = (props: {\n\trendericon: string;\n\tredirect: string;\n}): JSX.Element => {\n\tconst text = useColorModeValue('dark', 'light');\n\n\tlet SwitchIcon = useColorModeValue(FiGithub, FiGithub);\n\tif (props.rendericon === 'linkedin') {\n\t\tSwitchIcon = useColorModeValue(FiLinkedin, FiLinkedin);\n\t} else if (props.rendericon === 'gitlab') {\n\t\tSwitchIcon = useColorModeValue(FiGitlab, FiGitlab);\n\t}\n\n\tconst githubHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n\t\tevent.preventDefault();\n\t\twindow.open(props.redirect, '_blank');\n\t};\n\treturn (\n\t\t<IconButton\n\t\t\tsize=\"lg\"\n\t\t\tfontSize=\"larger\"\n\t\t\tonClick={githubHandler}\n\t\t\ticon={<SwitchIcon />}\n\t\t\taria-label={`Switch to ${text} mode`}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n","import * as React from 'react';\nimport { ColorModeSwitcher } from './header/ColorModeSwitcher';\nimport { SocialIcon } from './header/SocialIcon';\nimport { Box, Flex } from '@chakra-ui/react';\n\nexport const HeaderBar = (): JSX.Element => {\n\treturn (\n\t\t<Flex direction={'row'} justifyContent=\"center\">\n\t\t\t<Box pr={2}>\n\t\t\t\t<ColorModeSwitcher />\n\t\t\t</Box>\n\t\t\t<Box pr={2}>\n\t\t\t\t<SocialIcon rendericon={'github'} redirect={'https://github.com/cesarb1392'} />\n\t\t\t</Box>\n\t\t\t<Box pr={2}>\n\t\t\t\t<SocialIcon rendericon={'gitlab'} redirect={'https://gitlab.com/cesarb1392'} />\n\t\t\t</Box>\n\t\t\t<Box pr={2}>\n\t\t\t\t<SocialIcon rendericon={'linkedin'} redirect={'https://www.linkedin.com/in/cesar-represa-bautista'} />\n\t\t\t</Box>\n\t\t</Flex>\n\t);\n};\n","import * as React from 'react';\nimport { Box, Flex, Spinner, useColorMode, useMediaQuery } from '@chakra-ui/react';\nimport { PageBody } from './PageBody';\nimport { HeaderBar } from './HeaderBar';\nimport { useEffect } from 'react';\n\nlet flashingCounter = 0;\n\nexport const Page = (): JSX.Element => {\n\tconst { setColorMode, colorMode } = useColorMode();\n\tconst [isDesktopView] = useMediaQuery('(min-width: 832px)');\n\tconst [loaded, setLoaded] = React.useState<boolean>(false);\n\tconst firstUpdate = React.useRef(true);\n\tReact.useLayoutEffect(() => {\n\t\tif (firstUpdate.current) {\n\t\t\tfirstUpdate.current = false;\n\t\t\tsetLoaded(true);\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tif (flashingCounter < 3) {\n\t\t\t\tif (colorMode === 'dark') {\n\t\t\t\t\tsetColorMode('dark');\n\t\t\t\t} else {\n\t\t\t\t\tsetColorMode('light');\n\t\t\t\t}\n\t\t\t}\n\t\t\tflashingCounter += 1;\n\t\t}, 500);\n\t});\n\n\treturn (\n\t\t<Flex pt={10} pb={20} width=\"full\" direction=\"column\" pr={isDesktopView ? 20 : 5} pl={isDesktopView ? 20 : 5}>\n\t\t\t<Box pb={10} align=\"center\" justify=\"center\">\n\t\t\t\t<HeaderBar />\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t{!loaded && (\n\t\t\t\t\t<Spinner thickness=\"10px\" speed=\"0.65s\" emptyColor=\"gray.500\" color=\"gray.100\" size={'xl'} />\n\t\t\t\t)}\n\t\t\t\t{loaded && <PageBody />}\n\t\t\t</Box>\n\t\t</Flex>\n\t);\n};\n","import { extendTheme, theme } from '@chakra-ui/react';\nconst config = {\n\tinitialColorMode: 'light',\n\tuseSystemColorMode: false,\n};\nconst extendedTheme = extendTheme({ ...theme, ...config });\nexport default extendedTheme;\n","import * as React from 'react';\nimport { ChakraProvider, Box } from '@chakra-ui/react';\nimport { Page } from 'src/components/Page';\nimport theme from 'src/styles/CustomTheme';\n\nexport const App = (): JSX.Element => (\n\t<ChakraProvider theme={theme}>\n\t\t<Box textAlign=\"center\" fontSize=\"xl\">\n\t\t\t<Page />\n\t\t</Box>\n\t</ChakraProvider>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It is the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister(): void {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'src/App';\nimport reportWebVitals from 'src/utils/reportWebVitals';\nimport * as serviceWorker from 'src/utils/serviceWorker';\nimport { ColorModeScript } from '@chakra-ui/react';\nimport extendedTheme from 'src/styles/CustomTheme';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ColorModeScript initialColorMode={extendedTheme.config.initialColorMode} />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}